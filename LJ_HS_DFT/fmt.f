      SUBROUTINE DREP(IR,NR,DPE,RHO,N,DDR)

!     THIS SUBROUTINE IS TO CALCULATE THE WEIGHTED DENSITIES AND PARTIAL DERITIVES
!     OF THE FREE ENERGY DENSITY WRT WEIGHTED DENSITIES

	IMPLICIT NONE

      REAL*8 RHOB,DC,DP,T,MIX_F,RB,RC,DR,TOLE,PI
      COMMON RHOB,DC,DP,T,MIX_F,RB,RC,DR,TOLE,PI

      INTEGER NP,I,J,K,IW,KIP,KIN,IR,NR
      PARAMETER(NP=2**13)

	REAL*8 DPE,RHO(NP)
	REAL*8 N2,N3,NV2
	REAL*8 DDR(3,NP),N(3,NP)

	REAL*8 R,R1,RIN,RIP
	REAL*8 X,X1,X2,DDR1,DDR2,DDR3,DR1,DR2

! DEFINE WEIGHTED DENSITY FUNCTIONS FROM (DC-DPE)/2 TO (RB+DPE/2)     
	DO 10 I=IR,NR+NINT(DPE/2.0/DR)

	IW=I-IR+1  !INDEX IN WEIGHTED DENSITY FUNCTIONS
	R=DC/2+FLOAT(I-1)*DR	   

! calculate the weighted densities
	N2=0.0
	N3=0.0
	NV2=0.0

	IF(R.GT.DC/2.0) THEN	  ! NON-ZERO WEIGHTED DENSITIES

	RIN=R-DPE/2.0-DC/2	! INTEGRATION LIMITS
	RIP=R+DPE/2.0-DC/2

      KIN=NINT(RIN/DR)+1
      KIP=NINT(RIP/DR)+1

	DR1=RIN-FLOAT(KIN-1)*DR
	DR2=RIP-FLOAT(KIP-1)*DR

	DO K=KIN,KIP
	J=K-IR+1  !POSITION INDEX IN THE DENSITY PROFILE
	R1=DC/2+FLOAT(K-1)*DR   !POSITION

	IF (K.EQ.KIN) THEN
! LINEAR INTERPOLATION AT THE BOUNDARY POINTS
	X1=RHO(J)*R1
	X2=RHO(J+1)*(R1+DR)
	X=X1+(X2-X1)*DR1/DR
	DDR1=(X1+X)*DR1/2.0

	X1=RHO(J)*R1*(DPE**2/4.-(R-R1)**2)
	X2=RHO(J+1)*(R1+DR)*(DPE**2/4.-(R-R1-DR)**2)
	X=X1+(X2-X1)*DR1/DR
	DDR2=(X1+X)*DR1/2.0

	X1=RHO(J)*R1*(DPE**2/4.+R**2-R1**2)
	X2=RHO(J+1)*(R1+DR)*(DPE**2/4.+R**2-(R1+DR)**2)
	X=X1+(X2-X1)*DR1/DR
	DDR3=(X1+X)*DR1/2.0

	N2=N2-DDR1+RHO(J)*R1*DR/2.0
	N3=N3-DDR2+RHO(J)*R1*DR*(DPE**2/4.-(R-R1)**2)/2.0
	NV2=NV2-DDR3+RHO(J)*R1*DR*(DPE**2/4.+R**2-R1**2)/2.0

	ELSEIF (K.EQ.KIP) THEN
! LINEAR INTERPOLATION AT THE BOUNDARY POINTS
	X1=RHO(J)*R1
	X2=RHO(J+1)*(R1+DR)
	X=X1+(X2-X1)*DR2/DR
	DDR1=(X1+X)*DR2/2.0

	X1=RHO(J)*R1*(DPE**2/4.-(R-R1)**2)
	X2=RHO(J+1)*(R1+DR)*(DPE**2/4.-(R-R1-DR)**2)
	X=X1+(X2-X1)*DR2/DR
	DDR2=(X1+X)*DR2/2.0

	X1=RHO(J)*R1*(DPE**2/4.+R**2-R1**2)
	X2=RHO(J+1)*(R1+DR)*(DPE**2/4.+R**2-(R1+DR)**2)
	X=X1+(X2-X1)*DR2/DR
	DDR3=(X1+X)*DR2/2.0

	N2=N2+DDR1+RHO(J)*R1*DR/2.0
	N3=N3+DDR2+RHO(J)*R1*DR*(DPE**2/4.-(R-R1)**2)/2.0
	NV2=NV2+DDR3+RHO(J)*R1*DR*(DPE**2/4.+R**2-R1**2)/2.0

	ELSE
	N2=N2+RHO(J)*R1*DR
	N3=N3+RHO(J)*R1*DR*(DPE**2/4.-(R-R1)**2)
	NV2=NV2+RHO(J)*R1*DR*(DPE**2/4.+R**2-R1**2)
	ENDIF
	ENDDO

	N2=N2*PI*DPE/R
	N3=N3*PI/R
	NV2=NV2*PI/R**2
	ENDIF

      IF (N3.LE.1.E-8) THEN

	DO 20 J=1,3
	DDR(J,IW)=0.0
20    CONTINUE

	ELSE 

	DDR(1,IW)=-DLOG(1.-N3)/(PI*DPE**2)+N2/(PI*DPE*(1.-N3))
     &         +(N2**2-NV2**2)*(DLOG(1.-N3)/N3
     &         +1./(1.-N3)**2)/(12.*PI*N3)

      DDR(2,IW)=N2/(PI*(1.-N3)*DPE**2)
     &         +(N2**2-NV2**2)/(2.*PI*DPE*(1.-N3)**2)
     &         +(N2**3-3.*N2*NV2**2)*(-DLOG(1.-N3)/(18.*PI*N3**3)
     &         -1./(36.*PI*(1.-N3)*N3**2)
     &         -(1.-3.*N3)/(36.*PI*N3**2*(1.-N3)**3))

      DDR(3,IW)=-NV2/(PI*DPE*(1.-N3))
     &         -N2*NV2*(DLOG(1.-N3)/N3+1./(1.-N3)**2)/(6.*PI*N3)
	ENDIF

	N(1,IW)=N2
	N(2,IW)=N3
	N(3,IW)=NV2

10    CONTINUE

      RETURN
	END


